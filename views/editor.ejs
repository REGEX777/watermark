<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Watermark Positioning</title>
    <link rel="stylesheet" href="/css/output.css">
</head>

<body class="bg-gray-900 flex items-center justify-center min-h-screen p-4">
    <div class="bg-gray-800 p-6 rounded-lg shadow-lg w-full max-w-5xl">
        <h1 class="text-4xl font-extrabold mb-8 text-center text-white">Watermark Positioning</h1>
        <div class="relative mb-8">
            <div id="imageContainer" class="relative mx-auto">
                <img src="/uploads/<%= regularImage %>" alt="Regular Image" id="regularImage"
                    class="w-full max-w-[800px] h-auto rounded-lg shadow-md border border-gray-700">
                <img src="/uploads/<%= watermarkImage %>" alt="Watermark" id="watermarkImage"
                    class="absolute rounded-lg">
            </div>
        </div>
        <form action="/editor/export" method="post" class="space-y-6">
            <input type="hidden" name="regularImage" value="<%= regularImage %>">
            <input type="hidden" name="watermarkImage" value="<%= watermarkImage %>">
            <input type="hidden" name="position" id="watermarkPosition">

            <div class="flex flex-col gap-4">
                <div class="flex items-center justify-between">
                    <label for="opacity" class="text-white font-semibold">Watermark Opacity</label>
                    <input type="range" id="opacity" name="opacity" min="0" max="100" value="75"
                        class="w-full bg-gray-700 border-gray-600 rounded-md focus:ring-indigo-500">
                </div>
                <div class="flex items-center justify-between">
                    <label for="size" class="text-white font-semibold">Watermark Size</label>
                    <select id="size" name="size"
                        class="bg-gray-700 border-gray-600 rounded-md focus:ring-indigo-500 text-white">
                        <option value="10">10x10</option>
                        <option value="20">20x20</option>
                        <option value="30">30x30</option>
                        <option value="40">40x40</option>
                        <option value="50">50x50</option>
                        <option value="60">60x60</option>
                        <option value="70">70x70</option>
                        <option value="80">80x80</option>
                        <option value="90">90x90</option>
                        <option value="100">100x100</option>
                        <option value="120">120x120</option>
                        <option value="140">140x140</option>
                        <option value="160">160x160</option>
                    </select>
                </div>
            </div>

            <div class="grid grid-cols-2 md:grid-cols-3 gap-4 mb-8">
                <button type="button" data-position="top-left"
                    class="position-button bg-indigo-600 text-white py-2 px-4 rounded-md shadow-md hover:bg-indigo-700 transition-colors">
                    Top Left
                </button>
                <button type="button" data-position="top-right"
                    class="position-button bg-indigo-600 text-white py-2 px-4 rounded-md shadow-md hover:bg-indigo-700 transition-colors">
                    Top Right
                </button>
                <button type="button" data-position="bottom-left"
                    class="position-button bg-indigo-600 text-white py-2 px-4 rounded-md shadow-md hover:bg-indigo-700 transition-colors">
                    Bottom Left
                </button>
                <button type="button" data-position="bottom-right"
                    class="position-button bg-indigo-600 text-white py-2 px-4 rounded-md shadow-md hover:bg-indigo-700 transition-colors">
                    Bottom Right
                </button>
                <button type="button" data-position="center"
                    class="position-button bg-indigo-600 text-white py-2 px-4 rounded-md shadow-md hover:bg-indigo-700 transition-colors">
                    Center
                </button>
            </div>

            <div class="flex justify-center">
                <button type="submit"
                    class="bg-green-600 text-white py-3 px-6 rounded-md shadow-md hover:bg-green-700 transition-colors">
                    Export Image
                </button>
            </div>
        </form>
    </div>

    <script>
        const watermarkImage = document.getElementById('watermarkImage');
        const watermarkPosition = document.getElementById('watermarkPosition');
        const positionButtons = document.querySelectorAll('.position-button');
        const opacityInput = document.getElementById('opacity');
        const sizeDropdown = document.getElementById('size');
        const imageContainer = document.getElementById('imageContainer');

        watermarkPosition.value = 'center';
        watermarkImage.style.opacity = opacityInput.value / 100;
        watermarkImage.style.width = `${sizeDropdown.value}px`;
        watermarkImage.style.height = `${sizeDropdown.value}px`;

        // real time preview
        opacityInput.addEventListener('input', () => {
            watermarkImage.style.opacity = opacityInput.value / 100;
        });

        // real time size
        sizeDropdown.addEventListener('change', () => {
            watermarkImage.style.width = `${sizeDropdown.value}px`;
            watermarkImage.style.height = `${sizeDropdown.value}px`;
            setPosition(watermarkPosition.value);
        });

        positionButtons.forEach(button => {
            button.addEventListener('click', () => {
                const position = button.getAttribute('data-position');
                watermarkPosition.value = position;
                setPosition(position);
            });
        });

        function setPosition(position) {
            const containerWidth = imageContainer.clientWidth;
            const containerHeight = imageContainer.clientHeight;
            const watermarkWidth = watermarkImage.clientWidth;
            const watermarkHeight = watermarkImage.clientHeight;

            switch (position) {
                case 'top-left':
                    watermarkImage.style.position = 'absolute';
                    watermarkImage.style.left = '0px';
                    watermarkImage.style.top = '0px';
                    watermarkImage.style.transform = 'none';
                    break;
                case 'top-right':
                    watermarkImage.style.position = 'absolute';
                    watermarkImage.style.left = `${containerWidth - watermarkWidth}px`;
                    watermarkImage.style.top = '0px';
                    watermarkImage.style.transform = 'none';
                    break;
                case 'bottom-left':
                    watermarkImage.style.position = 'absolute';
                    watermarkImage.style.left = '0px';
                    watermarkImage.style.top = `${containerHeight - watermarkHeight}px`;
                    watermarkImage.style.transform = 'none';
                    break;
                case 'bottom-right':
                    watermarkImage.style.position = 'absolute';
                    watermarkImage.style.left = `${containerWidth - watermarkWidth}px`;
                    watermarkImage.style.top = `${containerHeight - watermarkHeight}px`;
                    watermarkImage.style.transform = 'none';
                    break;
                case 'center':
                    watermarkImage.style.position = 'absolute';
                    watermarkImage.style.left = `${(containerWidth - watermarkWidth) / 2}px`;
                    watermarkImage.style.top = `${(containerHeight - watermarkHeight) / 2}px`;
                    watermarkImage.style.transform = 'none';
                    break;
            }
        }
    </script>
</body>

</html>